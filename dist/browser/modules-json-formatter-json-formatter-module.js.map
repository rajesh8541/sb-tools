{"version":3,"sources":["./src/app/modules/json-formatter/json-formatter.component.ts","./src/app/modules/json-formatter/json-formatter.component.html","./src/app/modules/json-formatter/json-formatter.module.ts"],"names":[],"mappings":"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","file":"modules-json-formatter-json-formatter-module.js","sourcesContent":["import { invalid } from '@angular/compiler/src/render3/view/util';\nimport { Component, OnInit } from '@angular/core';\nimport { SEOService } from 'src/app/services/seo.service';\n\n@Component({\n  selector: 'app-json-formatter',\n  templateUrl: './json-formatter.component.html',\n  styleUrls: ['./json-formatter.component.scss'],\n})\nexport class JsonFormatterComponent implements OnInit {\n            \n  title = 'Online Json Formatter, Prettier and Validator';\n  subtitle ='We provide free online JSON Formatter, Prettier and Validator which will help many developers in their daily work.';\n  example =`{\"name\":\"John\", \"age\":30, \"car\":null}`;\n\nchildInputText='';\nformatted_input:any;\nconstructor(private seo: SEOService) {}\n\nngOnInit(): void {\n  this.seo.setSEO(this.title, this.subtitle);\n}\nconvert ()\n  {  \n    try{\n    \n        JSON.parse(this.childInputText);\n        this.formatted_input = JSON.stringify(JSON.parse(this.childInputText), null, 4);\n        return this.formatted_input;\n        }\n        catch(error){\n        return this.formatted_input=\"Invalid JSON Input!!!\"; \n        }\n  }\n}\n\n\n","\n        <app-sb-heading [title]=\"title\" [subtitle]=\"subtitle\"></app-sb-heading>\n            <div class=\"tool-container\">\n                    <app-sb-textarea [type]=\"'input'\" class=\"text-area\"(event)=\"childInputText=$event\"></app-sb-textarea>\n                        <div class=\"button-align\">\n                            <button class=\"btn\" (click)=\"convert()\">Beautify JSON </button>\n                        </div>\n                    <app-sb-textarea [type]=\"'output'\" class=\"text-area\" [parentData]=\"formatted_input\"></app-sb-textarea>\n            </div>\n\n            <div class=\"grid-container text-container\">\n                <div>\n                    <h2 style=\"text-align: center\">JSON Beautifier</h2>\n                        <p>\n                            JSON format is used for serializing and transmitting structured data over\n                            network connection. JSON commanly compresses blank space to reduce the\n                            amount of data transmitted to the server.\n                        </p>\n                        <p>\n                            Due to json blank space compressing technique will help in reducing the\n                            file size which is transfered to the server, Unlike XML because of that\n                            JSON become standard for data interchange over network.\n                        </p>\n                        <p>\n                            Most of the language support the JSON data format.\n                        </p>\n                        <h2>\n                            Why use JSON Beautifier?\n                        </h2>\n                        <p>\n                            Our online tool offers easy way to Beautify JSON data.<br />\n                            If the JSON data consist the image url then it will previvew that image in\n                            the data.\n                        </p>\n                        <h2>How to use this tool?</h2>\n                        <p>Just writte or copy pate the JSON data in the input box.</p>\n                        <p>\n                            Once you paste your code just click the BEautify JSON button, Beautified\n                            code will be genrated on the output box then user can copy or share the\n                            file.\n                        </p>\n                        <h2>JSON Data Types</h2>\n                        <p>\n                            The data types supported by the JSON are below:\n                        </p>\n                        <ul>\n                            <li>String</li>\n                            <li>Number</li>\n                            <li>Boolean</li>\n                            <li>NULL</li>\n                            <li>Array</li>\n                            <li>Object</li>\n                        </ul>\n                        <p>Here is an example of rough JSON data:<br /></p>\n                        <p>{{example}}</p>\n                </div>\n                <div>\n                            <app-sb-related-tools></app-sb-related-tools>\n                </div>\n        </div>\n\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFormatterComponent } from './json-formatter.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SbHeadingModule } from 'src/app/shared/sb-heading/sb-heading.module';\nimport { SbTextareaModule } from 'src/app/shared/sb-textarea/sb-textarea.module';\nimport { SbRelatedToolsModule } from 'src/app/shared/sb-related-tools/sb-related-tools.module';\n// import { prettyPrintJson, FormatOptions } from 'pretty-print-json';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JsonFormatterComponent,\n  },\n];\n\n@NgModule({\n  declarations: [JsonFormatterComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SbHeadingModule,SbTextareaModule,\n    SbRelatedToolsModule],\n})\nexport class JsonFormatterModule {}\n"],"sourceRoot":"webpack:///"}