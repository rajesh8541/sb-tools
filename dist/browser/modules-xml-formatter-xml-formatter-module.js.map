{"version":3,"sources":["./src/app/modules/xml-formatter/xml-formatter.component.ts","./src/app/modules/xml-formatter/xml-formatter.component.html","./src/app/modules/xml-formatter/xml-formatter.module.ts"],"names":[],"mappings":"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","file":"modules-xml-formatter-xml-formatter-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SEOService } from 'src/app/services/seo.service';\nconst format = require('xml-formatter');\n\n@Component({\n  selector: 'app-xml-formatter',\n  templateUrl: './xml-formatter.component.html',\n  styleUrls: ['./xml-formatter.component.scss'],\n})\nexport class XmlFormatterComponent implements OnInit {\n  title = 'Online XML Formatter, Prettier and Validator';\n  subtitle =\n    'We provide free online XML Formatter, Prettier and Validator which will help many developers in their daily work.';\n  constructor(private seo: SEOService) {}\n\n  childInputText = '';\n  outputText='';\n\n  ngOnInit(): void {\n    this.seo.setSEO(this.title, this.subtitle);\n  }\n\n  convert() {\n    var domParser = new DOMParser();\n    var xml = domParser.parseFromString(this.childInputText, 'text/xml');\n    const errorMsg = xml.querySelector('parsererror');\n    if (errorMsg) {\n      this.outputText = 'INVALID XML INPUT';\n    } else {\n      this.outputText = format(this.childInputText);\n    }\n  }\n}\n","<app-sb-heading [title]=\"title\" [subtitle]=\"subtitle\"></app-sb-heading>\n\n<div class=\"tool-container\">\n  <app-sb-textarea\n    [type]=\"'input'\"\n    class=\"text-area\"\n    (event)=\"childInputText = $event\"\n  ></app-sb-textarea>\n  <div class=\"button-align\">\n    <button class=\"btn\" (click)=\"convert()\">Validate XML</button>\n  </div>\n  <app-sb-textarea\n    [parentData]=\"outputText\"\n    [type]=\"'output'\"\n    class=\"text-area\"\n  ></app-sb-textarea>\n</div>\n\n<div class=\"grid-container text-container\">\n  <div class=\"\">\n    <h2 id=\"what-is-xml\">What is XML?</h2>\n    <p>\n      Extensible Markup Language (<strong>XML</strong>) is a meta-language,\n      which represents structured information on the web, so it can be stored\n      and transmitted.\n    </p>\n    <p>\n      XML files usually contain any type of information, whether it is sensitive\n      or any range of information.&nbsp;<br />\n      XML files are composed of tags, which provide us with data and information\n      we want to deal with.\n    </p>\n    <p>\n      Normally, a XML document contains a lot of data, which should be taken\n      care of accurately by the client, particularly by the designer.&nbsp;\n    </p>\n    <p>The bigger an XML file is; the more information it will bring.</p>\n    <h2>XML Beautifier</h2>\n    <p>\n      This XML beautifier gives you the office to arrange your XML code or\n      inquiry. This is a special instrument for designing the XML and its\n      utilization is too exceptionally straightforward.\n    </p>\n    <h2>How to use XML Beautifier?</h2>\n    <p>\n      Indeed, the utilization of a web-based XML Beautifier isn't all that\n      troublesome. You just need to glue your XML code which you have duplicated\n      from the source. From that point onward, hit the &ldquo;\n      <strong> Beautify XML</strong>&rdquo; button and it will wrap up.<br />\n      &nbsp;<br />\n      The formatted output of the XML code will be in front of you in just a\n      matter of seconds.\n    </p>\n    <h3>Advantages of XML</h3>\n    <ul>\n      <li>It can be read easily.</li>\n      <li>The documents written in XML format can be easily processed.</li>\n      <li>\n        The structure of XML is easy to understand and allows you to distinguish\n        between different parts of a document.\n      </li>\n      <li>\n        It facilitates information exchange between applications, regardless of\n        the platform used.\n      </li>\n      <li>\n        It is very easy to update the documents when changing or adding labels\n        in them.\n      </li>\n      <li>\n        By implementing the XML standard of code, the user can declare their own\n        bookmarks.\n      </li>\n    </ul>\n    <h2>XML Features</h2>\n    <p>\n      Obviously, the XML diagram fundamentally manages a bunch of rules, which\n      have been created to permit bigger information to be handled in a manner\n      that is simple for the PC and the projects to deal with such information.\n    </p>\n    <p>\n      This is why it has been successfully implemented in various applications\n      and services that deal with large amounts of information (<strong\n        >such as a database</strong\n      >).\n    </p>\n    <p>\n      The prominent feature of XML resides in its design, which has been focused\n      from the start to make sure:\n    </p>\n    <ul>\n      <li>Performance excellency</li>\n      <li>Ease of use in web services&nbsp;</li>\n      <li>Success in the field of large-scale electronic media publishing</li>\n      <li>Simplicity of implementation&nbsp;</li>\n    </ul>\n    <p>\n      One more element of XML records is the finished division of design also\n      plan, which permits the information contained to be sent out to other\n      designs, like HTML, PDF, RTF, and so on&nbsp;\n    </p>\n    <p>\n      In addition, a basic function is the ability to share data between\n      different systems and platforms, such as web pages and databases.\n    </p>\n  </div>\n  <div>\n    <app-sb-related-tools></app-sb-related-tools>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { XmlFormatterComponent } from './xml-formatter.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SbHeadingModule } from 'src/app/shared/sb-heading/sb-heading.module';\nimport { SbTextareaModule } from 'src/app/shared/sb-textarea/sb-textarea.module';\nimport { SbRelatedToolsModule } from 'src/app/shared/sb-related-tools/sb-related-tools.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: XmlFormatterComponent,\n  },\n];\n\n@NgModule({\n  declarations: [XmlFormatterComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SbHeadingModule,SbTextareaModule,\n    SbRelatedToolsModule,],\n})\nexport class XmlFormatterModule {}\n"],"sourceRoot":"webpack:///"}