{"version":3,"sources":["./node_modules/remedial/index.js","./node_modules/remove-trailing-spaces/lib/index.js","./src/app/modules/json-yaml/json-yaml.component.ts","./src/app/modules/json-yaml/json-yaml.component.html","./node_modules/json-to-pretty-yaml/index.js","./src/app/modules/json-yaml/json-yaml.module.ts"],"names":[],"mappings":"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","file":"modules-json-yaml-json-yaml-module.js","sourcesContent":["/*jslint onevar: true, undef: true, nomen: true, eqeqeq: true, plusplus: true, bitwise: true, regexp: true, newcap: true, immed: true */\n(function () {\n    \"use strict\";\n\n    var global = Function('return this')()\n      , classes = \"Boolean Number String Function Array Date RegExp Object\".split(\" \")\n      , i\n      , name\n      , class2type = {}\n      ;\n\n    for (i in classes) {\n      if (classes.hasOwnProperty(i)) {\n        name = classes[i];\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n      }\n    }\n\n    function typeOf(obj) {\n      return (null === obj || undefined === obj) ? String(obj) : class2type[Object.prototype.toString.call(obj)] || \"object\";\n    }\n\n    function isEmpty(o) {\n        var i, v;\n        if (typeOf(o) === 'object') {\n            for (i in o) { // fails jslint\n                v = o[i];\n                if (v !== undefined && typeOf(v) !== 'function') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    if (!String.prototype.entityify) {\n        String.prototype.entityify = function () {\n            return this.replace(/&/g, \"&amp;\").replace(/</g,\n                \"&lt;\").replace(/>/g, \"&gt;\");\n        };\n    }\n\n    if (!String.prototype.quote) {\n        String.prototype.quote = function () {\n            var c, i, l = this.length, o = '\"';\n            for (i = 0; i < l; i += 1) {\n                c = this.charAt(i);\n                if (c >= ' ') {\n                    if (c === '\\\\' || c === '\"') {\n                        o += '\\\\';\n                    }\n                    o += c;\n                } else {\n                    switch (c) {\n                    case '\\b':\n                        o += '\\\\b';\n                        break;\n                    case '\\f':\n                        o += '\\\\f';\n                        break;\n                    case '\\n':\n                        o += '\\\\n';\n                        break;\n                    case '\\r':\n                        o += '\\\\r';\n                        break;\n                    case '\\t':\n                        o += '\\\\t';\n                        break;\n                    default:\n                        c = c.charCodeAt();\n                        o += '\\\\u00' + Math.floor(c / 16).toString(16) +\n                            (c % 16).toString(16);\n                    }\n                }\n            }\n            return o + '\"';\n        };\n    } \n\n    if (!String.prototype.supplant) {\n        String.prototype.supplant = function (o) {\n            return this.replace(/{([^{}]*)}/g,\n                function (a, b) {\n                    var r = o[b];\n                    return typeof r === 'string' || typeof r === 'number' ? r : a;\n                }\n            );\n        };\n    }\n\n    if (!String.prototype.trim) {\n        String.prototype.trim = function () {\n            return this.replace(/^\\s*(\\S*(?:\\s+\\S+)*)\\s*$/, \"$1\");\n        };\n    }\n\n    // CommonJS / npm / Ender.JS\n    module.exports = {\n        typeOf: typeOf,\n        isEmpty: isEmpty\n    };\n    global.typeOf = global.typeOf || typeOf;\n    global.isEmpty = global.isEmpty || isEmpty;\n}());\n","\"use strict\";\n\n/**\n * removeTrailingSpaces\n * Remove the trailing spaces from a string.\n *\n * @name removeTrailingSpaces\n * @function\n * @param {String} input The input string.\n * @returns {String} The output string.\n */\n\nmodule.exports = function removeTrailingSpaces(input) {\n  // TODO If possible, use a regex\n  return input.split(\"\\n\").map(function (x) {\n    return x.trimRight();\n  }).join(\"\\n\");\n};","import { Component, OnInit } from '@angular/core';\nimport { SEOService } from 'src/app/services/seo.service';\n\nconst YAML = require('json-to-pretty-yaml');\n\n@Component({\n  selector: 'app-json-yaml',\n  templateUrl: './json-yaml.component.html',\n  styleUrls: ['./json-yaml.component.scss'],\n})\nexport class JsonYamlComponent implements OnInit {\n  title = 'Online Json to YAML or YML Convertor';\n  subtitle =\n    'We provide free online Json to YAML or YML Convertor which will help many developers in their daily work.';\n  doc: any;\n  constructor(private seo: SEOService) {}\n  \n  childInputText=''\n  inputData=''\n  \n  ngOnInit(): void {\n    this.seo.setSEO(this.title, this.subtitle);\n  }\n  convert()\n  {    \n             try\n             { \n              let obj = JSON.parse(this.childInputText); \n              this.inputData = YAML.stringify(obj); \n              return this.inputData;\n             }catch\n             {\n              return  this.inputData=\"Invalid JSON Input\";\n             }        \n  }\n}\n\n\n","<app-sb-heading [title]=\"title\" [subtitle]=\"subtitle\"></app-sb-heading>\n\n<div class=\"tool-container\">\n  <app-sb-textarea [type]=\"'input'\" class=\"text-area\" (event)=\"childInputText=$event\"></app-sb-textarea>\n  <div class=\"button-align\">\n    <button class=\"btn\" (click)=\"convert()\">JSON TO YAML</button>\n  </div>\n  <app-sb-textarea [type]=\"'output'\" class=\"text-area\" [parentData]=\"inputData\"></app-sb-textarea>\n</div>\n<div class=\"grid-container text-container\">\n  <div>\n    <h2>JSON to YAML Converter</h2>\n    <p>\n      This is an online tool that converts your JSON format data to YAML data\n      format and vice versa. It converts JSON objects into an YAML tree\n      structure.\n    </p>\n    <h2>How to use this JSON TO YAML tool?</h2>\n    <p>The tool we designed is easy to use. Kindly follow the below steps.</p>\n    <ol>\n      <li>Write or paste the JSON code into the input box.</li>\n      <li>\n        Press the &ldquo;JSON to YAML button&rdquo; to convert the data into YAML.\n      </li>\n      <li>\n        If you want to convert YAML to JSON, click on the &ldquo;YAML to\n        JSON&rdquo; button.\n      </li>\n      <li>\n        You can download or copy your result by clicking on the download or copy\n        button.\n      </li>\n    </ol>\n    <h2>What is JSON?</h2>\n    <p>\n      JSON is an open standard file format and data interchange format that uses\n      human-readable text to store and transmit data objects consisting of\n      attribute–value pairs and arrays.\n    </p>\n    <p>\n      It is a common data format with diverse uses in electronic data\n      interchange, including that of web applications with servers.\n    </p>\n    <p>\n      JSON format syntax has been derived from Javascript, but it is a language\n      independent.\n    </p>\n    <p>\n      JSON structure consist of object or array of objects , Objects are\n      key-value pairs enclosed in inverted commas. Arrays are also data sets\n      containing key-value pairs enclosed in square brackets. The whole code is\n      enclosed in curly brackets.\n    </p>\n    <p>\n      JSON structure is as simple Javascript object structure, So it's very easy\n      to understand.\n    </p>\n    <h2>What is YAML?</h2>\n    <p>\n      YAML is a human-readable data-serialization language. It is commonly used\n      for configuration files and in applications where data is being stored or\n      transmitted.\n    </p>\n    <p>\n      The YAML structure is very easy to use.\n    </p>\n    <p>\n      The attributes that are\n      objects (key-value pairs).\n    </p>\n    <p>The whole YAML is structured to obtain a hierarchal or tree structure.</p>\n    <h2>Why do you need JSON to YAML tool?</h2>\n    <h3>To efficiently convert JSON format data to YAML:</h3>\n    <p>\n      Nowadays programs are not written by single person on a single format so\n      we need JSON to YAML or vice versa helps you to convert your file to\n      another format efficiently.\n    </p>\n    <p>\n      In future, you may come up with a file with needs to be used in a programs\n      that supports another formats. So our, converters will come into play.\n    </p>\n    <p>\n      if program does not support some formats then again we have to rewrite.\n       So just use our tools for conversation,\n    </p>\n    <h3>To get dual results:</h3>\n    <p>\n      Our tools will help in converting the data from JSON to YAML or YAML to JSON and save the human efforts with just one click\n    </p>\n    <p>&nbsp;</p>\n  </div>\n  <div>\n    <app-sb-related-tools></app-sb-related-tools>\n  </div>\n</div>\n","(function() {\n    \"use strict\";\n\n    var typeOf = require('remedial').typeOf;\n    var trimWhitespace = require('remove-trailing-spaces');\n\n    function stringify(data) {\n        var handlers, indentLevel = '';\n\n        handlers = {\n            \"undefined\": function() {\n                // objects will not have `undefined` converted to `null`\n                // as this may have unintended consequences\n                // For arrays, however, this behavior seems appropriate\n                return 'null';\n            },\n            \"null\": function() {\n                return 'null';\n            },\n            \"number\": function(x) {\n                return x;\n            },\n            \"boolean\": function(x) {\n                return x ? 'true' : 'false';\n            },\n            \"string\": function(x) {\n                // to avoid the string \"true\" being confused with the\n                // the literal `true`, we always wrap strings in quotes\n                return JSON.stringify(x);\n            },\n            \"array\": function(x) {\n                var output = '';\n\n                if (0 === x.length) {\n                    output += '[]';\n                    return output;\n                }\n\n                indentLevel = indentLevel.replace(/$/, '  ');\n                x.forEach(function(y, i) {\n                    // TODO how should `undefined` be handled?\n                    var handler = handlers[typeOf(y)];\n\n                    if (!handler) {\n                        throw new Error('what the crap: ' + typeOf(y));\n                    }\n\n                    output += '\\n' + indentLevel + '- ' + handler(y, true);\n\n                });\n                indentLevel = indentLevel.replace(/  /, '');\n\n                return output;\n            },\n            \"object\": function(x, inArray, rootNode) {\n                var output = '';\n\n                if (0 === Object.keys(x).length) {\n                    output += '{}';\n                    return output;\n                }\n\n                if (!rootNode) {\n                    indentLevel = indentLevel.replace(/$/, '  ');\n                }\n\n                Object.keys(x).forEach(function(k, i) {\n                    var val = x[k],\n                        handler = handlers[typeOf(val)];\n\n                    if ('undefined' === typeof val) {\n                        // the user should do\n                        // delete obj.key\n                        // and not\n                        // obj.key = undefined\n                        // but we'll error on the side of caution\n                        return;\n                    }\n\n                    if (!handler) {\n                        throw new Error('what the crap: ' + typeOf(val));\n                    }\n\n                    if (!(inArray && i === 0)) {\n                        output += '\\n' + indentLevel;\n                    }\n\n                    output += k + ': ' + handler(val);\n                });\n                indentLevel = indentLevel.replace(/  /, '');\n\n                return output;\n            },\n            \"function\": function() {\n                // TODO this should throw or otherwise be ignored\n                return '[object Function]';\n            }\n        };\n\n        return trimWhitespace(handlers[typeOf(data)](data, true, true) + '\\n');\n    }\n\n    module.exports.stringify = stringify;\n}());\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonYamlComponent } from './json-yaml.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SbHeadingModule } from 'src/app/shared/sb-heading/sb-heading.module';\nimport { SbTextareaModule } from 'src/app/shared/sb-textarea/sb-textarea.module';\nimport { SbRelatedToolsModule } from 'src/app/shared/sb-related-tools/sb-related-tools.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JsonYamlComponent,\n  },\n];\n\n@NgModule({\n  declarations: [JsonYamlComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SbHeadingModule,SbTextareaModule,\n    SbRelatedToolsModule,],\n})\nexport class JsonYamlModule {}\n"],"sourceRoot":"webpack:///"}